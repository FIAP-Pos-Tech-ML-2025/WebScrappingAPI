name: WebScrapingAPI CI/CD Docker to GHCR

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/webscraping-api
  PYTHON_VERSION: "3.11"

jobs:
  build-and-push-to-ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}

    - name: Build and push Docker image to GHCR
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # --- Seção do Azure (Comentada para referência futura) ---
  # build-test-deploy-azure:
  #   runs-on: ubuntu-latest
  #   name: Build and Deploy to Azure
  #   needs: build-and-push-to-ghcr # Exemplo se quisesse usar a mesma imagem do GHCR para Azure
  #   if: false # Desabilitado por enquanto
  #   steps:
  #   # ... (suas etapas do Azure aqui, adaptadas se necessário) ...
  #   # - name: Deploy to Azure Web App
  #   #   uses: azure/webapps-deploy@v3
  #   #   with:
  #   #     app-name: ${{ secrets.WEBAPP_NAME_SCRAPER }} # Use um secret diferente para o nome do app do scraper
  #   #     images: ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} # Usando a tag da etapa meta